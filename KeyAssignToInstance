┌──(kali㉿The-beast)-[~/Terraform-for-beginners]
└─$ cd AWS-file/

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ ls
id_rsa  id_rsa.pub  instance.tf  provider.tf  readme.md  terraform.tfstate  terraform.tfstate.backup

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.50.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform apply --auto-approve

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance_for_demoPurpose will be created
  + resource "aws_instance" "instance_for_demoPurpose" {
      + ami                                  = "ami-04b70fa74e45c3917"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tags_all                             = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_key_pair.key-tf will be created
  + resource "aws_key_pair" "key-tf" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "key-tf"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtP1R3JNu8A4TzSzsWxfOc/PykFGAnbfESGUwzBMKwTE7O2CZe82cIPPYrvBSM1tesnEaa1dwPTzzPaHFgBrUz8cJXIoFeu6nNgXmWv21yc76vg8KF5VvUBT4+jrW5AiBBA7zDrk+Dqi8rDVgq5c7Hh1MgHvFKBxhLDGPGDOmmV/zw48bIklzyzOYPpNT2+GX5KBgS6t3xLv/2wQ5VdCBT+hE3lkwElacMCgQvHNXrhK6oTXiwLMkZNX6FKYQHS41z17wbIT3xpRagaNMDXY+2dq2Rg4G9a/u9FqRffQ2e6BnVGjizLfspm/z97YQHRPb7i+1h595x8SiwtMmjsbEibduFD5y3gtiph4c4jsNJUJoA+hCWwm2e+YzJcoHscGRWxYJvyXk3QBrzEqnWNsc6Rg8ZMN6ZK0LVTAfTUt6ms247xa1pf0F67FdbrYdQnJJrS9IJItsJZCROILfQl1SAf2bjCDtWhbpVWIiFKIcHuRISWrcjS1icWbqwxQXkEu8= kali@The-beast"
      + tags_all        = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.
aws_key_pair.key-tf: Creating...
aws_instance.instance_for_demoPurpose: Creating...
aws_key_pair.key-tf: Creation complete after 1s [id=key-tf]
aws_instance.instance_for_demoPurpose: Still creating... [10s elapsed]
aws_instance.instance_for_demoPurpose: Still creating... [20s elapsed]
aws_instance.instance_for_demoPurpose: Still creating... [30s elapsed]
aws_instance.instance_for_demoPurpose: Creation complete after 36s [id=i-0ebec0b8809afb824]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

printkey-name = "key-tf"

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform destroy
aws_key_pair.key-tf: Refreshing state... [id=key-tf]
aws_instance.instance_for_demoPurpose: Refreshing state... [id=i-0ebec0b8809afb824]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.instance_for_demoPurpose will be destroyed
  - resource "aws_instance" "instance_for_demoPurpose" {
      - ami                                  = "ami-04b70fa74e45c3917" -> null
      - arn                                  = "arn:aws:ec2:us-east-1:992382744602:instance/i-0ebec0b8809afb824" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "us-east-1a" -> null
      - cpu_core_count                       = 1 -> null
      - cpu_threads_per_core                 = 1 -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-0ebec0b8809afb824" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-030789fbd80c3f690" -> null
      - private_dns                          = "ip-172-31-29-216.ec2.internal" -> null
      - private_ip                           = "172.31.29.216" -> null
      - public_dns                           = "ec2-54-167-114-161.compute-1.amazonaws.com" -> null
      - public_ip                            = "54.167.114.161" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [
          - "default",
        ] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-0843d4b6e8e2492bf" -> null
      - tags                                 = {
          - "Name" = "Only-for-demo-purpose-Terraform"
        } -> null
      - tags_all                             = {
          - "Name" = "Only-for-demo-purpose-Terraform"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-0f0a0fe31c902539d",
        ] -> null

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 1 -> null
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-0f484f286713472e2" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp3" -> null
        }
    }

  # aws_key_pair.key-tf will be destroyed
  - resource "aws_key_pair" "key-tf" {
      - arn         = "arn:aws:ec2:us-east-1:992382744602:key-pair/key-tf" -> null
      - fingerprint = "5c:ee:f1:88:30:f9:30:f3:17:9b:ba:2f:86:a8:7c:3d" -> null
      - id          = "key-tf" -> null
      - key_name    = "key-tf" -> null
      - key_pair_id = "key-00b84fbf6751e69b9" -> null
      - key_type    = "rsa" -> null
      - public_key  = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtP1R3JNu8A4TzSzsWxfOc/PykFGAnbfESGUwzBMKwTE7O2CZe82cIPPYrvBSM1tesnEaa1dwPTzzPaHFgBrUz8cJXIoFeu6nNgXmWv21yc76vg8KF5VvUBT4+jrW5AiBBA7zDrk+Dqi8rDVgq5c7Hh1MgHvFKBxhLDGPGDOmmV/zw48bIklzyzOYPpNT2+GX5KBgS6t3xLv/2wQ5VdCBT+hE3lkwElacMCgQvHNXrhK6oTXiwLMkZNX6FKYQHS41z17wbIT3xpRagaNMDXY+2dq2Rg4G9a/u9FqRffQ2e6BnVGjizLfspm/z97YQHRPb7i+1h595x8SiwtMmjsbEibduFD5y3gtiph4c4jsNJUJoA+hCWwm2e+YzJcoHscGRWxYJvyXk3QBrzEqnWNsc6Rg8ZMN6ZK0LVTAfTUt6ms247xa1pf0F67FdbrYdQnJJrS9IJItsJZCROILfQl1SAf2bjCDtWhbpVWIiFKIcHuRISWrcjS1icWbqwxQXkEu8= kali@The-beast" -> null
      - tags        = {} -> null
      - tags_all    = {} -> null
    }

Plan: 0 to add, 0 to change, 2 to destroy.

Changes to Outputs:
  - printkey-name = "key-tf" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_key_pair.key-tf: Destroying... [id=key-tf]
aws_instance.instance_for_demoPurpose: Destroying... [id=i-0ebec0b8809afb824]
aws_key_pair.key-tf: Destruction complete after 1s
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 10s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 20s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 30s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 40s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 50s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 1m0s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 1m10s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 1m20s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 1m30s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 1m40s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 1m50s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 2m0s elapsed]
aws_instance.instance_for_demoPurpose: Still destroying... [id=i-0ebec0b8809afb824, 2m10s elapsed]
aws_instance.instance_for_demoPurpose: Destruction complete after 2m16s

Destroy complete! Resources: 2 destroyed.

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform fmt
instance.tf

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform apply --auto-approve
╷
│ Error: Invalid function argument
│ 
│   on instance.tf line 27, in resource "aws_key_pair" "key-tf":
│   27:   public_key = file("${path.module}/id.rsa.pub")
│     ├────────────────
│     │ while calling file(path)
│     │ path.module is "."
│ 
│ Invalid value for "path" parameter: no file exists at "./id.rsa.pub"; this function works only with files that are distributed as part of the
│ configuration source code, so if this file will be created by a resource in this configuration you must instead obtain this result from an attribute
│ of that resource.
╵

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform apply --auto-approve

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance_for_demoPurpose will be created
  + resource "aws_instance" "instance_for_demoPurpose" {
      + ami                                  = "ami-04b70fa74e45c3917"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "aws_key_pair.key-tf.key_name"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tags_all                             = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_key_pair.key-tf will be created
  + resource "aws_key_pair" "key-tf" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "key-tf"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtP1R3JNu8A4TzSzsWxfOc/PykFGAnbfESGUwzBMKwTE7O2CZe82cIPPYrvBSM1tesnEaa1dwPTzzPaHFgBrUz8cJXIoFeu6nNgXmWv21yc76vg8KF5VvUBT4+jrW5AiBBA7zDrk+Dqi8rDVgq5c7Hh1MgHvFKBxhLDGPGDOmmV/zw48bIklzyzOYPpNT2+GX5KBgS6t3xLv/2wQ5VdCBT+hE3lkwElacMCgQvHNXrhK6oTXiwLMkZNX6FKYQHS41z17wbIT3xpRagaNMDXY+2dq2Rg4G9a/u9FqRffQ2e6BnVGjizLfspm/z97YQHRPb7i+1h595x8SiwtMmjsbEibduFD5y3gtiph4c4jsNJUJoA+hCWwm2e+YzJcoHscGRWxYJvyXk3QBrzEqnWNsc6Rg8ZMN6ZK0LVTAfTUt6ms247xa1pf0F67FdbrYdQnJJrS9IJItsJZCROILfQl1SAf2bjCDtWhbpVWIiFKIcHuRISWrcjS1icWbqwxQXkEu8= kali@The-beast"
      + tags_all        = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.
aws_key_pair.key-tf: Creating...
aws_instance.instance_for_demoPurpose: Creating...
aws_key_pair.key-tf: Creation complete after 1s [id=key-tf]
╷
│ Error: creating EC2 Instance: InvalidKeyPair.NotFound: The key pair 'aws_key_pair.key-tf.key_name' does not exist
│       status code: 400, request id: 4ff614e1-6313-4ae3-8167-bf501697c0af
│ 
│   with aws_instance.instance_for_demoPurpose,
│   on instance.tf line 15, in resource "aws_instance" "instance_for_demoPurpose":
│   15: resource "aws_instance" "instance_for_demoPurpose" {
│ 
╵

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform fmt

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform plan
aws_key_pair.key-tf: Refreshing state... [id=key-tf]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance_for_demoPurpose will be created
  + resource "aws_instance" "instance_for_demoPurpose" {
      + ami                                  = "ami-04b70fa74e45c3917"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "aws_key_pair.key-tf.key_name"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tags_all                             = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform validate
Success! The configuration is valid.


┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform apply --auto-approve
aws_key_pair.key-tf: Refreshing state... [id=key-tf]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance_for_demoPurpose will be created
  + resource "aws_instance" "instance_for_demoPurpose" {
      + ami                                  = "ami-04b70fa74e45c3917"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "aws_key_pair.key-tf.key_name"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tags_all                             = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
aws_instance.instance_for_demoPurpose: Creating...
╷
│ Error: creating EC2 Instance: InvalidKeyPair.NotFound: The key pair 'aws_key_pair.key-tf.key_name' does not exist
│       status code: 400, request id: 53db04f8-036c-4a3e-8766-d7a71cb71873
│ 
│   with aws_instance.instance_for_demoPurpose,
│   on instance.tf line 15, in resource "aws_instance" "instance_for_demoPurpose":
│   15: resource "aws_instance" "instance_for_demoPurpose" {
│ 
╵

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform validate
Success! The configuration is valid.


┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ terraform apply --auto-approve
aws_key_pair.key-tf: Refreshing state... [id=key-tf]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance_for_demoPurpose will be created
  + resource "aws_instance" "instance_for_demoPurpose" {
      + ami                                  = "ami-04b70fa74e45c3917"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "key-tf"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tags_all                             = {
          + "Name" = "Only-for-demo-purpose-Terraform"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
aws_instance.instance_for_demoPurpose: Creating...
aws_instance.instance_for_demoPurpose: Still creating... [10s elapsed]
aws_instance.instance_for_demoPurpose: Still creating... [20s elapsed]
aws_instance.instance_for_demoPurpose: Still creating... [30s elapsed]
aws_instance.instance_for_demoPurpose: Creation complete after 37s [id=i-05163bb9fef7dddd8]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

┌──(kali㉿The-beast)-[~/Terraform-for-beginners/AWS-file]
└─$ 



# terraform {
#   required_providers {
#     aws = {
#       source  = "hashicorp/aws"
#       version = "~> 5.0"
#     }
#   }
# }

# Configure the AWS Provider
# provider "aws" {
# region = "us-east-1"
# }

resource "aws_instance" "instance_for_demoPurpose" {
  ami           = "ami-04b70fa74e45c3917"
  instance_type = "t2.micro"
  key_name      = "${aws_key_pair.key-tf.key_name}"
  tags = {
    Name = "Only-for-demo-purpose-Terraform"
  }
}


resource "aws_key_pair" "key-tf" {
  key_name   = "key-tf"
  public_key = file("${path.module}/id_rsa.pub")
}

# output "printkey-name" {
#   value = aws_key_pair.key-tf.key_name

# }
