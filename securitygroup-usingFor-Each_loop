# # terraform {
# #   required_providers {
# #     aws = {
# #       source  = "hashicorp/aws"
# #       version = "~> 5.0"
# #     }
# #   }
# # }

# # Configure the AWS Provider
# # provider "aws" {
# # region = "us-east-1"
# # }

# # resource "aws_instance" "instance_for_demoPurpose" {
# #   ami           = "ami-04b70fa74e45c3917"
# #   instance_type = "t2.micro"
# #   key_name      = "${aws_key_pair.key-tf.key_name}"
# #   tags = {
# #     Name = "Only-for-demo-purpose-Terraform"
# #   }
# # }


# # resource "aws_key_pair" "key-tf" {
# #   key_name   = "key-tf"
# #   public_key = file("${path.module}/id_rsa.pub")
# # }

# # output "printkey-name" {
# #   value = aws_key_pair.key-tf.key_name

# # }


resource "aws_security_group" "allow_tls" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic and all outbound traffic"
  tags = {
    Name = "allow_tls"
  }
  dynamic "ingress" {
    for_each = [22, 80, 443, 3306, 3000]
    iterator = port
    content {
      from_port   = port.value
      protocol    = "tcp"
      to_port     = port.value
      cidr_blocks = ["0.0.0.0/0"]
    }
  }
}

#   # resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4" {
#   # security_group_id = aws_security_group.allow_tls.id
#   ingress {
#     from_port   = 443
#     protocol    = "tcp"
#     to_port     = 443
#     cidr_blocks = ["0.0.0.0/0"]
#   }
#   # resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4" {
#   # security_group_id = aws_security_group.allow_tls.id
#   ingress {
#     from_port   = 80
#     protocol    = "tcp"
#     to_port     = 80
#     cidr_blocks = ["0.0.0.0/0"]
#   }
#   # resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4" {
#   # security_group_id = aws_security_group.allow_tls.id
#   ingress {
#     from_port   = 22
#     protocol    = "tcp"
#     to_port     = 22
#     cidr_blocks = ["0.0.0.0/0"]
#   }
#   # resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4"
#   ingress {
#     # security_group_id = aws_security_group.allow_tls.id
#     from_port   = 3306
#     protocol    = "tcp"
#     to_port     = 3306
#     cidr_blocks = ["0.0.0.0/0"]
#   }

#   # resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv6" {
#   #   security_group_id = aws_security_group.allow_tls.id
#   #   from_port         = 443
#   #   ip_protocol       = "tcp"
#   #   to_port           = 443
#   # }

#   # resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4" {
#   #   security_group_id = aws_security_group.allow_tls.id
#   #   cidr_ipv4         = "0.0.0.0/0"
#   #   ip_protocol       = "-1" # semantically equivalent to all ports
#   # }
# }

# # resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv6" {
# #   security_group_id = aws_security_group.allow_tls.id
# #   cidr_ipv6         = "::/0"
# #   ip_protocol       = "-1" # semantically equivalent to all ports
# # }


#  ingress {
#     from_port   = 443
#     protocol    = "tcp"
#     to_port     = 443
#     cidr_blocks = ["0.0.0.0/0"]
#   }
